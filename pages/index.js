import Head from "next/head";
import TopBar from "../components/TopBar/TopBar";
import Header from "../components/header/header";
import Posts from "../components/posts";
import SideBar from "../components/sidebar";
import JustInSection from "../components/just-in-posts-section";
import LearnSection from "../components/learn-section";
import TrendingNews from "../components/trending-news-section/index";
import gql from "graphql-tag";
import { client } from "../lib/apollo";
import GadgetsDevices from "../components/gadgets-devices-section";
export default function Home({
  JUST_IN_posts,
  LEARN_SEC_posts,
  TREND_NEWS_posts,
}) {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin="true"
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@100;200;300;400;500;600;700&family=Lora:ital,wght@1,400;1,500;1,600;1,700&family=Roboto:wght@300&family=Varela&family=Varela+Round&display=swap"
          rel="stylesheet"
        />
      </Head>

      <Header />
       <JustInSection data={JUST_IN_posts} />
      {/*<TrendingNews
        Trend_News_Data={TREND_NEWS_posts}
        Just_In_Data={JUST_IN_posts}
      />
      <LearnSection data={LEARN_SEC_posts} />
      <GadgetsDevices /> */}
    </div>
  );
}

export async function getStaticProps() {
  const GET_JUST_IN_POSTS = gql`
    query AllPostsQuery {
      posts(first: 10) {
        nodes {
          title
          content
          date
          uri
          slug
          featuredImage {
            node {
              mediaItemUrl
            }
          }
          categories {
            nodes {
              name
            }
          }
        }
      }
    }
  `;
  const JUST_IN_response = await client.query({
    query: GET_JUST_IN_POSTS,
  });
  const JUST_IN_posts = JUST_IN_response?.data?.posts?.nodes;

  const GET_LEARN_SEC_POSTS = gql`
    query AllPostsQuery {
      posts(first: 10) {
        nodes {
          title
          content
          date
          uri
          slug
          featuredImage {
            node {
              mediaItemUrl
            }
          }
          categories {
            nodes {
              name
            }
          }
        }
      }
    }
  `;
  const LEARN_SEC_response = await client.query({
    query: GET_LEARN_SEC_POSTS,
  });
  const LEARN_SEC_posts = LEARN_SEC_response?.data?.posts?.nodes;

  const GET_TREND_NEWS_SEC_POSTS = gql`
    query AllPostsQuery {
      posts(first: 50, where: { categoryName: "_trend-news-section" }) {
        nodes {
          title
          content
          date
          uri
          featuredImage {
            node {
              mediaItemUrl
            }
          }
          categories {
            nodes {
              name
            }
          }
        }
      }
    }
  `;
  const TREND_NEWS_response = await client.query({
    query: GET_TREND_NEWS_SEC_POSTS,
  });
  const TREND_NEWS_posts = TREND_NEWS_response?.data?.posts?.nodes;

  // const clientTEST = await clientPromise;
  // const db = clientTEST.db("users_db");
  // let users = await db.collection("users_details").find({}).toArray();
  // users = JSON.parse(JSON.stringify(users));

  return {
    props: {
      JUST_IN_posts,
      LEARN_SEC_posts,
      TREND_NEWS_posts,
    },
  };
}
